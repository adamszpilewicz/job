from pathlib import Path
import os

def is_eligible(credit_quality, repayment_capacity):
    """assigning risk weights for exposures
    
    Arguments:
        credit_quality {str} -- is the value of the property significantly linked to the credit quality of the borrower
        repayment_capacity {str} -- does the repayment capacity come substantially from a flow from this property
    """
    if credit_quality=='yes' or repayment_capacity=='yes':
        return 0
    return 1

def return_directory(full_path=os.path.dirname( __file__ ), level_up = 0):
    return str(Path(full_path).parents[level_up]) 

def exposure_class_pre(product_variant_code):
    """defining rwa exposure class before collateral assignment
    
    Arguments:
        product_variant_code {str} -- product variant code of the account
    """
    return product_variant_code.split('_')[0] 
